#! /bin/bash

appname=serf
runas=serf

. /etc/.docker_functions

chown ${runas} ${log_dir} 2>/dev/null

# by default, we only listen to localhost unless told otherwise
#
rpc_port=${SERF_RPC_PORT:-7373}
rpc_ip=${SERF_RPC_IP:-127.0.0.1}

# by default we bind to all interfaces unless told otherwise
#
bind_port=${SERF_BIND_PORT:-7946}
bind_ip=${SERF_BIND_IP:-0.0.0.0}

advertise_port=${SERF_ADVERTISE_PORT:-$(get_docker_container_nat_port ${bind_port})}
advertise_ip=${SERF_ADVERTISE_IP:-$(get_docker_container_nat_ip ${bind_port})}

# If PORT_SCAN is enabled, use nmap to find our peers within our network
# keep expanding the netmask till we find a peer that might want to talk to us
# netmask cannot be smaller than 16
#
if [ -n "${PORT_SCAN}" ]; then
  for answer in $( port_scan_network ${bind_port} ${PORT_SCAN_MASK} ); do
    join_list="${join_list} -join=${answer}" 
  done
fi

# If a JOIN_LIST was specified then add those nodes to the agent run command
# Use nmap to see if its accepting connections, because if you attempt to join
# a non-responding node, it causes issues
#
if [ -n "${SERF_JOIN_LIST}" ]; then
  for joiner in $(echo ${SERF_JOIN_LIST} | tr ',' ' '); do
    joiner_ip=$(echo ${joiner}: | cut -d: -f1)
    joiner_port=$(echo ${joiner}: | cut -d: -f2)

    for answer in $( port_scan_network ${joiner_port} 32 ${joiner_ip}); do
      join_list="${join_list} -join=${answer}" 
    done
  done
fi

# If the advertise port is not the same as the bind port then assume we are a child
# and add the parent context to our join list if its running
# wil re-try this join every 5 seconds for 5 minutes (5*60 = 300)
#
if [ "${advertise_port}" != "${bind_port}" ]; then
  join_list="${join_list} -retry-interval=5s -retry-max=60 -retry-join=$(get_docker_host_ip):${bind_port}"
fi

log_level=${DEBUG:+debug}
: ${log_level:=info}

exec /sbin/setuser ${runas} \
  /usr/bin/serf agent \
  ${join_list} \
  -config-dir /etc/${appname} \
  -log-level ${log_level} \
  -node "$(get_docker_container_name):${random_key}" \
  -rpc-addr "${rpc_ip}:${rpc_port}" \
  -bind "${bind_ip}:${bind_port}" \
  -tag start_time=$(date +%s) \
  -advertise "${advertise_ip}:${advertise_port}" \
  -event-handler /etc/service/${appname}/dispatcher.sh \
  >>${log_dir}/${appname}.log 2>&1

  #-snapshot ${log_dir}/snapshot.dat \
  #-tags-file ${log_dir}/tags.dat \
